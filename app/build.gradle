apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'
apply plugin: 'com.jakewharton.butterknife'
android {
    compileSdkVersion 30
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "com.example.jobdemo"
        minSdkVersion 15
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

        //阿里路由框架配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
        signingConfig signingConfigs.debug
    }

    signingConfigs {
        app_official {
            storeFile file('C:\\Users\\Administrator\\.android\\debug.keystore')
            storePassword 'android'
            keyPassword 'android'
            keyAlias 'androiddebugkey'
        }
    }

    buildTypes {
        release {
            buildConfigField "String", "BUILD_TYPE999", '"release"'
            buildConfigField "boolean", "LOG_DEBUG", "false" //不显示log
            minifyEnabled true      //打开混淆
            shrinkResources true    //打开资源压缩
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [label: "jobdemo正式版"]
//            signingConfig signingConfigs.config     //配置前面文件
        }
        debug {
            buildConfigField "String", "BUILD_TYPE999", '"debug"'
//            applicationIdSuffix '.debug'
            manifestPlaceholders = [label: "jobdemo调试版"]
        }

        betatest {
            buildConfigField "String", "BUILD_TYPE999", '"betatest"'
            applicationIdSuffix '.test'
            manifestPlaceholders = [label: "jobdemo测试版"]
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
//        signingConfig signingConfigs.release
    }

    //多渠道打包配置
    flavorDimensions "default"
    productFlavors {
        //渠道包
        app_official {
            manifestPlaceholders = [app_name: "默认包", channel: "app_official"]
        }
        app_360 {
            manifestPlaceholders = [app_name: "360渠道包", channel: "app_360"]
        }
        app_qq {
            manifestPlaceholders = [app_name: "腾讯应用宝", channel: "app_qq"]
        }
    }

    variantFilter { variant ->
        def names = variant.flavors*.name
        // To check for a build type instead, use variant.buildType.name == "buildType"
        if (names.contains("app_qq") || names.contains("app_360")) {
            // Gradle ignores any variants that satisfy the conditions above.
            setIgnore(true)
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    //解决方法数超标的问题（在application里有初始化，上面android标签页有设置为true）
    implementation 'com.android.support:multidex:1.0.3'

    implementation 'com.jakewharton:butterknife:10.2.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.1'

    //Event bus 订阅传递数据
    implementation 'org.greenrobot:eventbus:3.2.0'


    //glide图片框架
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
    implementation 'androidx.core:core-ktx:1.5.0-alpha02'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'com.tencent.bugly:crashreport:latest.release'
    //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.1.9
    implementation 'com.tencent.bugly:nativecrashreport:latest.release'
    //其中latest.release指代最新Bugly NDK版本号，也可以指定明确的版本号，例如3.0

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.1'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'
    betatestImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'
    //初始化启动框架
    implementation "androidx.startup:startup-runtime:1.0.0-alpha03"

    implementation("com.squareup.okhttp3:okhttp:4.9.0")

    // 友盟统计SDK
    implementation 'com.umeng.umsdk:common:9.3.0' // (必选)版本号
    implementation 'com.umeng.umsdk:asms:1.1.3' // asms包依赖(必选)
    implementation 'com.umeng.umsdk:crash:0.0.5' // native crash包依赖(必选

    //OAID采集
    implementation 'com.umeng.umsdk:oaid_lenovo:1.0.0' // (可选)
    implementation 'com.umeng.umsdk:oaid_mi:1.0.0' // (可选)
    implementation 'com.umeng.umsdk:oaid_oppo:1.0.4' // (可选)
    implementation 'com.umeng.umsdk:oaid_vivo:1.0.0.1' // (可选)
}
repositories {
    mavenCentral()
}
