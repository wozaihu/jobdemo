apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'
apply plugin: 'com.jakewharton.butterknife'
android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "com.example.jobdemo"
        minSdkVersion 15
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"


        //阿里路由框架配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    //配置签名（debug版或默认使用默认的签名，release版要自己配置一下）
    signingConfigs {
        release {
            def Properties keyProps = new Properties()
            keyProps.load(new FileInputStream(file('C:\\Users\\Administrator\\.android\\debug_sign.properties')))
            storeFile file(keyProps["store_file"])
            storePassword keyProps["store_pwd"]
            keyAlias keyProps["key_alias"]
            keyPassword keyProps["key_pwd"]
        }
        debug {
            storeFile file('C:\\Users\\Administrator\\.android\\default.jks')
            storePassword '123456'
            keyAlias 'androiddebug'
            keyPassword '123456'
        }
    }


    buildTypes {
        release {
            buildConfigField "String", "BUILD_TYPE999", '"release"'
            buildConfigField "boolean", "LOG_DEBUG", "false" //不显示log
            minifyEnabled true      //打开混淆
            shrinkResources true    //打开资源压缩
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [label: "jobdemo正式版"]
//            signingConfig signingConfigs.config     //配置前面文件
        }
        debug {
            buildConfigField "String", "BUILD_TYPE999", '"debug"'
            applicationIdSuffix '.debug'
            manifestPlaceholders = [label: "jobdemo调试版"]
        }

        betatest {
            buildConfigField "String", "BUILD_TYPE999", '"betatest"'
            applicationIdSuffix '.test'
            manifestPlaceholders = [label: "jobdemo测试版"]
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
        signingConfig signingConfigs.release
    }

    //多渠道打包配置
    flavorDimensions "default"
    productFlavors {
        //渠道包
        app_official {
            manifestPlaceholders = [app_name: "默认包", channel: "app_official"]
        }
        app_360 {
            manifestPlaceholders = [app_name: "360渠道包", channel: "app_360"]
        }
        app_qq {
            manifestPlaceholders = [app_name: "腾讯应用宝", channel: "app_qq"]
        }
    }

    variantFilter { variant ->
        def names = variant.flavors*.name
        // To check for a build type instead, use variant.buildType.name == "buildType"
        if (names.contains("app_qq")) {
            // Gradle ignores any variants that satisfy the conditions above.
            setIgnore(true)
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'


    implementation 'com.jakewharton:butterknife:10.2.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.1'

    //Event bus 订阅传递数据
    implementation 'org.greenrobot:eventbus:3.2.0'

    //引用的本地库
    implementation project(path: ':utilslibrary')
    implementation 'com.example.testcreatearr:app:1.0.0'

    //glide图片框架
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
    implementation 'androidx.core:core-ktx:1.3.0-rc01'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'com.tencent.bugly:crashreport:latest.release'
    //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.1.9
    implementation 'com.tencent.bugly:nativecrashreport:latest.release'
    //其中latest.release指代最新Bugly NDK版本号，也可以指定明确的版本号，例如3.0

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.1'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'
}
repositories {
    mavenCentral()
}
