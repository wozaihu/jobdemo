<resources xmlns:tools="http://schemas.android.com/tools">

    <!-- Base application theme. -->
    <style name="JobDemoAppTheme" parent="Theme.AppCompat.Light.NoActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>

        <!--textColorPrimary会影响toolbar标题颜色和button，editText文字颜色-->
        <!--        <item name="android:textColorPrimary">@color/white</item>-->
        <!--        小米底部手势线背景使用底部导航颜色-->
        <!--        <item name="android:navigationBarColor" tools:ignore="NewApi">@color/black</item>-->
        <!--        在主题中设置全局启动动画，在一些手机和模拟器上无效，还是在beseActivity的OnCreate 中覆盖启动
                    ，再重写finish 方法添加返回上个activity的动画，
        -->
        <item name="android:activityOpenEnterAnimation">@anim/out_right</item>
        <item name="android:activityOpenExitAnimation">@anim/in_left</item>
        <item name="android:activityCloseEnterAnimation">@anim/finish_in</item>
        <item name="android:activityCloseExitAnimation">@anim/finish_out</item>
    </style>

    <style name="AppBaseTheme" parent="Theme.AppCompat.Light">
        <!--
            Theme customizations available in newer API levels can go in
            res/values-vXX/styles.xml, while customizations related to
            backward-compatibility can go here.
       -->

    </style>

    <!-- App全局主题 -->
    <style name="AppTheme" parent="AppBaseTheme">
        <item name="android:windowNoTitle">true</item>
        <item name="colorPrimary">@color/green</item>
        <item name="colorPrimaryDark">@color/green</item>
        <item name="colorAccent">@color/green</item>
        <!--        <item name="android:windowBackground">@android:color/transparent</item>-->
        <!--<item name="android:windowAnimationStyle">@style/ActivityTranslateAnim</item>-->
    </style>

    <style name="otherPageStyle" parent="AppTheme">
        <!--        <item name="android:windowIsTranslucent">true</item>-->
        <item name="android:windowTranslucentStatus">true</item>
        <!--        <item name="android:statusBarColor">@android:color/transparent</item>-->
    </style>

    <style name="defaultStyle" parent="Theme.AppCompat.Light.NoActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>
        <!--textColorPrimary会影响toolbar标题颜色和button，editText文字颜色-->
        <!--        <item name="android:textColorPrimary">@color/white</item>-->
        <!--        小米底部手势线背景使用底部导航颜色-->
        <!--        <item name="android:navigationBarColor" tools:ignore="NewApi">@color/black</item>-->
        <!--        在主题中设置全局启动动画，在一些手机和模拟器上无效，还是在beseActivity的OnCreate 中覆盖启动
                    ，再重写finish 方法添加返回上个activity的动画，
        -->
        <item name="android:activityOpenEnterAnimation">@anim/out_right</item>
        <item name="android:activityOpenExitAnimation">@anim/in_left</item>
        <item name="android:activityCloseEnterAnimation">@anim/finish_in</item>
        <item name="android:activityCloseExitAnimation">@anim/finish_out</item>
    </style>


    <!--tablayout 字体设置-->
    <style name="TabLayoutBoldTextSize" parent="TextAppearance.Design.Tab">
        <item name="android:textSize">17sp</item>
        <item name="android:textStyle">bold</item>
        <item name="android:textColor">#fc5a44</item>
    </style>

    <style name="TabLayoutNormalTextSize" parent="TextAppearance.Design.Tab">
        <item name="android:textSize">12sp</item>
        <item name="android:textStyle">normal</item>
        <item name="android:textColor">@color/black</item>
    </style>

    <style name="DjtStyle" parent="Theme.AppCompat.Light.NoActionBar">
        <item name="android:windowTranslucentStatus">true</item>
    </style>

    <declare-styleable name="RadiusCardView">
        <!--        左上圆角大小-->
        <attr name="rcv_topLeftRadiu" format="dimension" />
        <!--        右上圆角大小-->
        <attr name="rcv_topRightRadiu" format="dimension" />
        <!--        右下圆角大小-->
        <attr name="rcv_bottomRightRadiu" format="dimension" />
        <!--        左下圆角大小-->
        <attr name="rcv_bottomLeftRadiu" format="dimension" />
    </declare-styleable>

    <!--Shape ableImageView 圆角-->
    <style name="RoundedStyle">
        <item name="cornerFamily">rounded</item>
        <item name="cornerSize">50%</item>
    </style>

    <style name="BottomDialogStyle" parent="@android:style/Theme.Dialog">
        <!-- Dialog进入及退出动画 -->
        <item name="android:windowAnimationStyle">@style/DialogPopupStyle</item>
    </style>

    <style name="DialogPopupStyle" parent="@android:style/Animation.Dialog">
        <item name="android:windowEnterAnimation">@anim/show_up</item>
        <item name="android:windowExitAnimation">@anim/dismiss_down</item>
    </style>


</resources>
